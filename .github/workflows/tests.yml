name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-asyncio pytest-cov pytest-mock
    
    - name: Run tests with coverage
      run: |
        python -m pytest --cov=meshmind --cov-report=xml --cov-report=term-missing --disable-warnings
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Run unit tests only
      run: |
        python -m pytest -m unit --disable-warnings
    
    - name: Run integration tests only
      run: |
        python -m pytest -m integration --disable-warnings

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install flake8 black isort mypy
    
    - name: Run linters
      run: |
        # Check code formatting
        black --check --diff src/ tests/
        
        # Check import sorting
        isort --check-only --diff src/ tests/
        
        # Check code style
        flake8 src/ tests/ --max-line-length=88 --extend-ignore=E203,W503
        
        # Type checking (optional - can be made required later)
        mypy src/ --ignore-missing-imports --no-strict-optional

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install bandit safety
    
    - name: Run security checks
      run: |
        # Check for common security issues
        bandit -r src/ -f json -o bandit-report.json || true
        
        # Check for known vulnerabilities in dependencies
        safety check --json --output safety-report.json || true
